---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  vars:
    flyctl_version: "0.1.130"
    pulumi_version: "v3.94.2"

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install packages
      ansible.builtin.apt:
        name:
          - git
          - htop
          - vim
          - firefox
          - gnome-tweaks
          - ripgrep
          - zsh
          - fzf
          - tmux
          - make
          - patch
          - gdbm-libs
          - libnsl2
          - luarocks
          - wl-clipboard
          - fd-find
          - helix
          - autoconf
          - libiodbc
          # - podman-compose
          - inotify-tools
          - toilet
          - dotnet-sdk-8.0
          - unar
          - tmate

        update_cache: true

    - name: Update all packages (Ubuntu systems)
      ansible.builtin.apt:
        name: "*"
        state: "latest"
        update_cache: true
        cache_valid_time: 3600

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh


    # - name: Add Brave Browser Repo
    #   ansible.builtin.yum_repository:
    #     name: brave-browser
    #     description: Brave Browser
    #     baseurl: https://brave-browser-rpm-release.s3.brave.com/x86_64/
    #     gpgkey: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
    #     gpgcheck: true
    #     enabled: true
    #
    # - name: Import Brave Browser GPG Key
    #   ansible.builtin.rpm_key:
    #     key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
    #     state: present
    #
    # - name: Install Brave Browser
    #   ansible.builtin.dnf:
    #     name: brave-browser
    #     state: present

    - name: Import Microsoft GPG Key
      ansible.builtin.apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    # - name: Add Visual Studio Code Repo
    #   ansible.builtin.yum_repository:
    #     name: vscode
    #     description: Visual Studio Code
    #     baseurl: https://packages.microsoft.com/yumrepos/vscode
    #     gpgkey: https://packages.microsoft.com/keys/microsoft.asc
    #     gpgcheck: true
    #     enabled: true

    - name: Install VS Code
      ansible.builtin.apt:
        name: code
        state: present

    # - name: Add Docker repo
    #   ansible.builtin.yum_repository:
    #     name: docker
    #     description: Docker repo
    #     baseurl: "https://download.docker.com/linux/fedora/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/stable"
    #     gpgkey: "https://download.docker.com/linux/fedora/gpg"
    #     gpgcheck: true
    #     enabled: true

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        groups: docker
        append: true


    # - name: Add kubectl repo
    #   ansible.builtin.apt_repository:
    #     name: Kubernetes
    #     description: Kubernetes repjho
    #     baseurl: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
    #     gpgkey: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
    #     gpgcheck: true
    #     enabled: true

    # - name: Install kubectl
    #   ansible.builtin.dnf:
    #     name: kubectl
    #     state: present
    #
    # - name: Install Terraform
    #   ansible.builtin.dnf:
    #     name: terraform
    #     state: present
    #
    - name: Install Flatpak packages
      community.general.flatpak:
        name:
          - org.videolan.VLC
          - md.obsidian.Obsidian
        state: present

    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if Jetbrains Mono exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.fonts/JetBrainsMonoNerd*FontMono*"
      register: jetbrains_mono_exists
      ignore_errors: true
      changed_when: false

    - name: Download Jetbrains mono
      when: jetbrains_mono_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
        dest: "~{{ remote_regular_user }}/.fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"
